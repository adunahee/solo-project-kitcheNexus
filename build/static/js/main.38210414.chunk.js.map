{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/foodReducer.js","redux/reducers/groceryReducer.js","redux/reducers/pantryReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/foodSaga.js","redux/sagas/grocerySaga.js","redux/sagas/pantrySaga.js","redux/sagas/recipeSaga.js","redux/sagas/index.js","components/Nav/Footer.js","components/Nav/PageNavDrawer.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/LoginPage/LoginForm.js","components/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/Recipe/RecipesNav.js","components/Recipe/RecipeCard.js","components/Recipe/RecipeCardList.js","components/FoodSearchBar/FoodSearchBar.js","components/Recipe/RecipeBrowse.js","components/Recipe/RecipeRecent.js","components/Recipe/RecipeFavorites.js","components/Recipe/Recipes.js","components/FoodSearchBar/FoodToAddListItem.js","components/FoodSearchBar/FoodToAddList.js","components/FoodSearchBar/FoodFormPopup.js","components/Pantry/PantryTagSelect.js","components/Pantry/PantryRowItem.js","components/Pantry/PantryTable.js","components/Pantry/BatchActions.js","components/Pantry/BatchActionButton.js","components/Pantry/Pantry.js","components/Grocery/GroceryListItem.js","components/Grocery/GroceryLists.js","components/Grocery/CreateListPopup.js","components/Grocery/Grocery.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","searchResults","foodSearchValue","recipeHits","recipeSearchValue","recentRecipes","recipeFavorites","grocery","pendingGroceryItems","concat","Object","toConsumableArray","filter","c","i","groceryListNames","pantry","pendingPantryItems","batchItems","food","batchAction","pantryTags","foodTagsToUpdate","rootReducer","errors","user","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchFoods","foodSaga","foodSaga_marked","foodSaga_marked2","fetchGrocery","addToList","createGroceryList","fetchListNames","deleteList","deleteGroceryItem","grocerySaga","alert","grocerySaga_marked","listName","groceries","grocerySaga_marked2","grocerySaga_marked3","_context4","_marked4","_context5","delete","_marked5","p","_context6","grocery_list_id","id","_marked6","_context7","takeEvery","_marked7","addToPantry","removeFromPantry","fetchPantry","fetchTags","updateTags","pantrySaga","pantrySaga_marked","pantrySaga_marked2","pantrySaga_marked3","pantrySaga_marked4","pantrySaga_marked5","pantrySaga_marked6","fetchRecipes","fetchRecentRecipes","addRecentRecipe","addFavorite","fetchFavorites","recipeSaga","recipeSaga_marked","recipeSaga_marked2","timeStamp","moment","format","url","encodeURIComponent","recipeSaga_marked3","uri","recipeSaga_marked4","recipeSaga_marked5","recipeSaga_marked6","rootSaga","all","sagas_marked","Footer","externalLink","padding","fontSize","react_default","createElement","index_es","style","backgroundColor","href","target","rel","className","PageNavDrawer","getLinkStyle","linkName","location","_this","props","pathname","fontWeight","indexOf","linkStyle","container","direction","justify","spacing","minWidth","minHeight","item","this","Link","to","align","Nav_Footer","React","Component","PageNavDrawerWithRouter","withRouter","LogOutButton","dispatch","title","onClick","icons_index_es","color","connect","Nav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleNav","setState","nav","position","aria-label","open","onClose","tabIndex","role","onKeyDown","Nav_PageNavDrawer","variant","components_LogOutButton_LogOutButton","LoginForm","username","password","submitUser","event","preventDefault","mode","handleRegister","handleLoginReturn","handleInputChangeFor","propertyName","defineProperty","value","registerBtnStyle","onSubmit","alignItems","label","onChange","margin","autoComplete","rs","LoginPage","formName","LoginPage_LoginForm","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","AboutPage","xs","UserPage","RecipesNav","getStyle","match","RecipesNavWithRouter","RecipeCard","checkFavoriteStatus","favorites","find","recipe","handleExpandClick","expanded","handleLink","handleFavorite","maxWidth","subheader","totalTime","backgroundImage","image","display","backgroundSize","backgroundRepeat","backgroundPosition","height","width","aria-expanded","transform","in","timeout","unmountOnExit","ingredientLines","map","ingredient","key","RecipeCardList","recipes","Recipe_RecipeCard","getSuggestionValue","suggestion","name","renderSuggestion","FoodSearchBar","_ref","newValue","_this$props","setValue","setRecipeSearchValue","pageView","onSuggestionsClearRequested","clearSuggestions","getSuggestions","inputValue","trim","toLowerCase","onSuggestionsFetchRequested","_ref2","suggestions","inputProps","placeholder","Typography_default","dist_default","mapDispatchToProps","RecipeBrowse","handleSubmit","handleClear","handleClearAll","components_FoodSearchBar_FoodSearchBar","visibility","Recipe_RecipeCardList","RecipeRecent","RecipeFavorites","Recipes","Recipe_RecipesNav","exact","path","FoodToAddListItem","checkForDuplicates","warning","pantryItem","food_name","push","join","forEach","groceryObj","listNames","listObj","listCheck","list_name","foodCheck","handleListItemClick","index","ListItem_default","FoodToAddList","buildList","pendingArr","FoodSearchBar_FoodToAddListItem","Grid_default","DialogContentText_default","List_default","FoodFormPopup","handleClose","handleOpen","handleAdd","transition","getClass","groceryItem","size","aria-labelledby","TransitionComponent","fullScreen","FoodSearchBar_FoodToAddList","PantryTagSelect","handleTagChange","newTagFoodObj","foodObj","tag_id","buildOptions","tags","tag","tag_name","disabled","PantryRowItem","handleClick","_callee","confirmMore","window","confirm","handleCheckbox","checked","TableRow_default","TableCell_default","Pantry_PantryTagSelect","pantry_tag_name","date_added","fromNow","includes","PantryTable","buildPantryTableRows","Pantry_PantryRowItem","Table_default","TableHead_default","TableBody_default","BatchActions","handleActionChange","checkColor","textAlignLast","autowidth","BatchActionsWithRouter","BatchActionButton","handleActionButton","searchCriteria","history","actionButtonDescription","BatchActionButtonWithRouter","Pantry","Paper_default","FoodSearchBar_FoodFormPopup","Pantry_BatchActions","Pantry_BatchActionButton","Pantry_PantryTable","GroceryListItem","GroceryLists","buildListItem","listItems","list","Grocery_GroceryListItem","handleDeleteList","expandIcon","CreateListPopup","handleCreateNewList","updateName","autoFocus","fullWidth","Grocery","buildGroceryLists","Grocery_GroceryLists","Grocery_CreateListPopup","App","HashRouter","sm","md","lg","components_Nav_Nav","Switch","Redirect","from","components_ProtectedRoute_ProtectedRoute","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.38210414.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'LOGIN', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'LOGIN';\n      case 'SET_TO_REGISTER_MODE':\n        return 'REGISTER';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nconst searchResults = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FOOD_SEARCH':\n            return action.payload;\n        case 'CLEAR_SUGGESTIONS':\n            return [];\n        default:\n            return state;\n    }\n};\n\nconst foodSearchValue = (state = '', action) => {\n    switch (action.type) {\n        case 'SET_VALUE':\n            return action.payload;\n        case 'CLEAR_VALUE':\n            return '';\n        default:\n            return state;\n    }\n}\n\nconst recipeHits = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_RECIPE_HITS':\n            return action.payload;\n        case 'CLEAR_RECIPE_HITS':\n            return [];\n        default:\n            return state;\n    }\n}\n\nconst recipeSearchValue = (state = '', action) => {\n    switch (action.type) {\n        case 'RECIPE_SEARCH_VALUE':\n            return action.payload;\n        case 'CLEAR_SEARCH_VALUE':\n            return '';\n        default:\n            return state;\n    }\n}\n\nconst recentRecipes = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_RECENT_RECIPES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst recipeFavorites = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FAVORITES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    searchResults,\n    foodSearchValue,\n    recipeHits,\n    recipeSearchValue,\n    recentRecipes,\n    recipeFavorites\n});\n\nexport {\n    searchResults,\n    foodSearchValue,\n    recipeHits,\n    recipeSearchValue,\n    recentRecipes,\n    recipeFavorites\n}","import { combineReducers } from 'redux';\n\nconst grocery = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_GROCERY':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst pendingGroceryItems = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TO_PENDING_GROCERY':\n            return [...state, action.payload];\n        // case 'CLEAR_PENDING_GROCERY2':\n        case 'CLEAR_PENDING_GROCERY':\n            return [];\n        case 'REMOVE_PENDING_GROCERY_ITEM':\n            return state.filter((c, i) => { return i !== action.payload });\n        default:\n            return state;\n    }\n}\n\nconst groceryListNames = (state = [], action) => {\n    switch(action.type) {\n        case 'SET_GROCERY_LIST_NAMES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    grocery,\n    pendingGroceryItems,\n    groceryListNames,\n});","import { combineReducers } from 'redux';\n\nconst pantry = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_PANTRY':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst pendingPantryItems = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TO_PENDING_PANTRY':\n            return [...state, action.payload];\n        case 'CLEAR_PENDING_PANTRY':\n            return [];\n        case 'REMOVE_PENDING_PANTRY_ITEM':\n            return state.filter( (c, i) => { return i !== action.payload });\n        default:\n            return state;\n    }\n}\n\nconst batchItems = (state = [], action ) => {\n    switch(action.type) {\n        case 'ADD_TO_BATCH':\n            return [...state, action.payload];\n        case 'REMOVE_FROM_BATCH':\n            return state.filter( (food, i) => {\n                return action.payload !== food;\n            });\n        case 'CLEAR_BATCH_ITEMS':\n            return [];\n        default:\n            return state;\n    }\n}\n\nconst batchAction = (state = '', action) => {\n    switch(action.type) {\n        case 'SET_ACTION':\n            return action.payload;\n        case 'CLEAR_BATCH_ACTION':\n            return '';\n        default:\n            return state;\n    }\n}\n\nconst pantryTags = (state = [], action) => {\n    switch(action.type){\n        case 'SET_PANTRY_TAGS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst foodTagsToUpdate = (state = [], action) => {\n    switch(action.type){\n        case 'UPDATE_TAG':\n            return [...state, action.payload]\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    pantry,\n    pendingPantryItems,\n    batchItems,\n    batchAction,\n    pantryTags,\n    foodTagsToUpdate,\n});","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport food from './foodReducer';\nimport grocery from './groceryReducer';\nimport pantry from './pantryReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  food,\n  grocery,\n  pantry,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest} from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* fetchFoods(action) {\n    try {\n        let response = yield axios.get(`/api/food/${action.payload}`);\n        yield put({ type: 'SET_FOOD_SEARCH', payload: response.data });\n    } catch (error) {\n        console.log('Error with fetchFoods saga:', error);\n    }\n}\n\nfunction* foodSaga() {\n    yield takeLatest('FETCH_FOODS', fetchFoods);\n}\n\nexport default foodSaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* fetchGrocery() {\n    try {\n        const response = yield axios.get('/api/grocery/groceries');\n        yield put({ type: 'SET_GROCERY', payload: response.data })\n    }\n    catch (err) {\n        console.log('error in fetchGrocery saga:', err);\n        yield alert('Unable to fetch grocery list at this time.');\n    }\n}\n\nfunction* addToList(action) {\n    try {\n        // console.log(action.payload.groceries);\n        yield axios.post(`/api/grocery/${action.payload.listName}`, action.payload.groceries);\n        yield alert('Grocery list updated.');\n        // these could be replaced with a single action \"AFTER_ADD\" and another case added to each reducer \n        yield put({ type: 'FETCH_GROCERY' });\n        yield put({ type: `CLEAR_PENDING_GROCERY` });\n        yield put({ type: 'CLEAR_BATCH_ITEMS' });\n        yield put({ type: 'CLEAR_BATCH_ACTION' });\n    } catch (err) {\n        console.log('error in addToList saga:', err);\n        yield alert('Unable to add to grocery list at this time.');\n    }\n}\n\nfunction* createGroceryList(action) {\n    try {\n        yield axios.post(`/api/grocery/new-list/${action.payload}`);\n        yield put({ type: 'FETCH_LIST_NAMES' })\n    } catch (err) {\n        console.log('error in createGroceryList saga:', err);\n        yield alert('Unable to create new grocery list at this time.')\n    }\n}\n\nfunction* fetchListNames() {\n    try {\n        const response = yield axios.get('/api/grocery/list/names');\n        yield put({ type: 'SET_GROCERY_LIST_NAMES', payload: response.data });\n    } catch (err) {\n        console.log('error in fetchListNames:', err);\n        yield alert('Unable to fetch grocery list names at this time.');\n    }\n}\n\nfunction* deleteList(action) {\n    try {\n        yield axios.delete(`/api/grocery/list/${action.payload}`);\n        yield put({ type: \"FETCH_LIST_NAMES\" });\n    } catch (e) {\n        console.log('error in deleteList saga:', e);\n        yield alert('Unable to delete list at this time.');\n    }\n}\n\nfunction* deleteGroceryItem(action) {\n    try {\n        const p = action.payload;\n        yield axios.delete(`/api/grocery/item/${p.grocery_list_id}/${p.id}`);\n        yield put({ type: 'FETCH_GROCERY' });\n    } catch (e) {\n        console.log('error in deleteGroceryItem saga:', e);\n        yield alert('Unable to delete grocery item at this time.');\n    }\n}\n\nfunction* grocerySaga() {\n    yield takeEvery('FETCH_GROCERY', fetchGrocery);\n    yield takeLatest('ADD_FOOD_TO_GROCERY', addToList);\n    yield takeLatest('CREATE_NEW_GROCERY_LIST', createGroceryList);\n    yield takeLatest('FETCH_LIST_NAMES', fetchListNames);\n    yield takeLatest('DELETE_LIST', deleteList);\n    yield takeLatest('DELETE_GROCERY_ITEM', deleteGroceryItem);\n}\n\n\n\nexport default grocerySaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addToPantry(action) {\n    try {\n        yield axios.post(`/api/pantry`, action.payload);\n        yield put({ type: 'FETCH_PANTRY' });\n        yield put({ type: \"CLEAR_PENDING_PANTRY\" });\n    } catch (err) {\n        console.log('Error with addToPantry saga', err);\n        yield alert('Unable to add food to pantry at this time.');\n    }\n}\n\nfunction* removeFromPantry(action) {\n    try {\n        yield axios.put(`/api/pantry/delete`, action.payload)\n        yield alert('Removed from pantry.');\n        yield put({ type: 'FETCH_PANTRY' });\n        yield put({ type: 'CLEAR_BATCH_ITEMS' });\n        yield put({ type: 'CLEAR_BATCH_ACTION' });\n    } catch (err) {\n        console.log('Error with removeFromPantry saga:', err);\n        yield alert('Unable to remove from pantry.');\n    }\n}\n\nfunction* fetchPantry() {\n    try {\n        const response = yield axios.get('/api/pantry/food');\n        yield put({ type: 'SET_PANTRY', payload: response.data })\n    }\n    catch (err) {\n        console.log('error with fetchPantry saga', err);\n        yield alert('Unable to fetch pantry at this time.');\n    }\n}\n\nfunction* fetchTags() {\n    try {\n        const response = yield axios.get('/api/pantry/tags');\n        yield put({ type: 'SET_PANTRY_TAGS', payload: response.data })\n    }\n    catch (err) {\n        console.log('error with fetchPantry saga', err);\n        yield alert('Unable to fetch pantry at this time.');\n    }\n}\n\nfunction* updateTags(action) {\n    try{\n        yield axios.put('api/pantry/tags', action.payload);\n        yield put({type: 'FETCH_PANTRY'});\n        yield put({ type: 'CLEAR_BATCH_ITEMS' });\n        yield put({ type: 'CLEAR_BATCH_ACTION' });\n    } catch(e){\n        console.log('error in updateTags saga', e);\n        yield alert('Unable to update tags at this time.')\n    }\n}\n\nfunction* pantrySaga() {\n    yield takeLatest('ADD_FOOD_TO_PANTRY', addToPantry);\n    yield takeEvery('FETCH_PANTRY', fetchPantry);\n    yield takeLatest('REMOVE_FROM_PANTRY', removeFromPantry);\n    yield takeLatest('FETCH_PANTRY_TAGS', fetchTags);\n    yield takeLatest('UPDATE_TAGS', updateTags);\n}\n\nexport default pantrySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport moment from 'moment';\n\nfunction* fetchRecipes(action) {\n    try {\n        let response = yield axios.get(`/api/recipe/search/${action.payload}`);\n        yield put({ type: 'SET_RECIPE_HITS', payload: response.data });\n        yield put({ type: 'CLEAR_BATCH_ITEMS' });\n        yield put({ type: 'CLEAR_BATCH_ACTION' });\n    } catch (error) {\n        console.log('Error with fetchRecipes saga:', error);\n    }\n}\n\nfunction* fetchRecentRecipes() {\n    try{\n        const response = yield axios.get('/recipe/recent');\n        yield put({type: 'SET_RECENT_RECIPES', payload: response.data});\n    } catch(err) {\n        console.log('Error with fetchRecentRecipes:', err);\n        \n    }\n}\n\nfunction* addRecentRecipe(action) {\n    try {\n        yield axios.post('/recipe/recent',\n            {\n                timeStamp: moment().format(),\n                url: encodeURIComponent(action.payload)\n            });\n        yield put({type: 'FETCH_RECENT_RECIPES'})\n    } catch (err) {\n        console.log('error adding recent recipe:', err);\n    }\n}\n\nfunction* addFavorite(action) {\n    try{\n        yield axios.post('/recipe/favorite', { uri: encodeURIComponent(action.payload)})\n        yield alert('Favorite Status Updated!');\n        yield put({type: 'FETCH_FAVORITES'});\n    } catch(err) {\n        console.log('error in addFavorite saga:', err);\n        yield alert('Unable to favorite recipe at this time.');\n    }\n}\n\nfunction* fetchFavorites() {\n    try{\n        let response = yield axios.get('/recipe/favorites');\n        yield put({ type: 'SET_FAVORITES', payload: response.data });\n    }catch(err){\n        console.log('error in fetchFavorites saga');\n        yield alert('Unable to load favorites.')\n    }\n}\n\nfunction* recipeSaga() {\n    yield takeLatest('FETCH_RECIPES', fetchRecipes);\n    yield takeLatest('ADD_RECENT_RECIPE', addRecentRecipe);\n    yield takeLatest('FETCH_RECENT_RECIPES', fetchRecentRecipes);\n    yield takeLatest('ADD_FAVORITE', addFavorite);\n    yield takeLatest('FETCH_FAVORITES', fetchFavorites);\n}\n\nexport default recipeSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport foodSaga from './foodSaga';\nimport grocerySaga from './grocerySaga';\nimport pantrySaga from './pantrySaga';\nimport recipeSaga from './recipeSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    foodSaga(),\n    grocerySaga(),\n    pantrySaga(),\n    recipeSaga(),\n  ]);\n}\n","import React from 'react';\n\nimport './Nav.css';\n\nimport {Typography, List, ListItem, Paper} from '@material-ui/core'\n\n\n\nconst Footer = () => {\n  const externalLink = {\n    padding: '14px',\n    fontSize: '1rem'}\n\n  return (\n    <List>\n\n      <ListItem >\n        <Paper style={{backgroundColor: 'rgb(174, 221, 148)'}} >\n          <a href=\"https://github.com/adunahee\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className='nav-link'>\n          <Typography style={externalLink}>Created By Anthony Dunahee</Typography>\n          </a>\n        </Paper>\n      </ListItem>\n\n      <ListItem >\n          <Paper>\n            <a href=\"https://www.edamam.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className='nav-link'>\n            <Typography style={externalLink}>Powered by Edamam API</Typography>\n              {/* <img src=\"https://www.edamam.com/assets/img/small-logo.png\"\n            alt='Edamam Logo'/> */}\n            </a>\n          </Paper>\n      </ListItem>\n    </List>\n  )\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport Footer from './Footer';\n\nimport './Nav.css';\n\nimport {\n    Typography,\n    List,\n    ListItem,\n    Grid,\n    Paper,\n} from '@material-ui/core';\n\nclass PageNavDrawer extends React.Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n    }\n\n    //conditionally styles nav links based on nav link type and history location\n    getLinkStyle = (linkName) => {\n        const location = this.props.location.pathname;\n\n        const style = {};\n        switch (linkName) {\n            case ('pantry'):\n                if (location === '/pantry') {\n                    style.backgroundColor = '#ff5d55';\n                    style.fontWeight = 'bold';\n                } else {\n                    style.backgroundColor = '#ffb4b0'\n                }\n                return style;\n            case ('recipe'):\n                if (location.indexOf('recipe') > -1) {\n                    style.backgroundColor = '#ffc957';\n                    style.fontWeight = 'bold';\n                } else {\n                    style.backgroundColor = '#ffe3ae'\n                }\n                return style;\n            case ('grocery'):\n                if (location === '/grocery') {\n                    style.backgroundColor = '#3d8af7';\n                    style.fontWeight = 'bold';\n                } else {\n                    style.backgroundColor = '#a8c6fa';\n                }\n                return style;\n            default:\n                break;\n        }\n    }\n\n    linkStyle = {\n        padding: '14px',\n        fontWeight: 'inherit',\n        fontSize: 'inherit',\n    }\n\n    render() {\n        return (\n            <Grid container\n                direction='column'\n                justify=\"space-between\"\n                spacing={24}\n                style={{ minWidth: '250px',\n                        minHeight: '85vh' }}>\n                <Grid item>\n                    <List>\n\n                        <ListItem>\n                            <Paper style={this.getLinkStyle('pantry')}>\n                                <Link className=\"nav-link\"\n                                    to=\"/pantry\">\n                                    <Typography align='center'\n                                        style={this.linkStyle}>\n                                        Pantry</Typography>\n                                </Link>\n                            </Paper>\n                        </ListItem>\n\n                        <ListItem>\n                            <Paper style={this.getLinkStyle('recipe')}>\n                                <Link className=\"nav-link\"\n                                    to=\"/recipes/browse\">\n                                    <Typography align='center'\n                                        style={this.linkStyle}>\n                                        Recipes</Typography>\n                                </Link>\n                            </Paper>\n                        </ListItem>\n\n                        <ListItem>\n                            <Paper style={this.getLinkStyle('grocery')}>\n                                <Link className=\"nav-link\"\n                                    to=\"/grocery\">\n                                    <Typography align='center'\n                                        style={this.linkStyle}>\n                                        Grocery</Typography>\n                                </Link>\n                            </Paper>\n                        </ListItem>\n\n                    </List>\n                </Grid>\n                <Grid item>\n                    <Footer />\n                </Grid>\n\n\n\n            </Grid>\n        )\n    }\n}\n\nconst PageNavDrawerWithRouter = withRouter(PageNavDrawer);\n\nexport default PageNavDrawerWithRouter;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { ExitToApp } from '@material-ui/icons';\n\nclass LogOutButton extends React.Component {\n  componentDidMount() {\n    //for grocery view\n    this.props.dispatch({ type: 'FETCH_LIST_NAMES' })\n    this.props.dispatch({ type: \"FETCH_GROCERY\" });\n    //for pantry view\n    this.props.dispatch({ type: \"FETCH_PANTRY\" });\n    this.props.dispatch({ type: 'FETCH_PANTRY_TAGS' })\n  }\n  \n  render() {\n    return (\n      <Tooltip title='Log Out'>\n        <IconButton\n          // This IconButton shows up in multiple locations and is styled differently\n          // because it's styled differently depending on where it is used, the className\n          // is passed to it from it's parents through React props\n          onClick={() => this.props.dispatch({ type: 'LOGOUT' })}\n        >\n          <ExitToApp style={{ color: 'black' }} />\n        </IconButton>\n      </Tooltip>\n    )\n  }\n}\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this IconButton will always be a log out IconButton\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\n\nimport PageNavDrawer from './PageNavDrawer';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\n\nimport { Grid, Typography, AppBar, Toolbar, IconButton, Drawer } from '@material-ui/core';\nimport { Menu, Info } from '@material-ui/icons';\n\nimport './Nav.css';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nav: false,\n    }\n  }\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  }\n\n  toggleNav = () => {\n    this.setState({ nav: !this.state.nav })\n  }\n\n  render() {\n\n    return (\n      <Grid>\n\n        <AppBar position=\"static\"\n          style={{ backgroundColor: '#aedd94' }}>\n          <Toolbar>\n            <IconButton aria-label=\"Menu\" onClick={this.toggleNav}>\n              <Menu style={{color: 'black'}}/>\n            </IconButton>\n            <Drawer open={this.state.nav} onClose={this.toggleNav}>\n              <div\n                tabIndex={0}\n                role=\"button\"\n                onClick={this.toggleNav}\n                onKeyDown={this.toggleNav}>\n                <PageNavDrawer />\n              </div>\n            </Drawer>\n            <Link to=\"/home\" className=\"nav-link\">\n              <Typography variant='h3' className='nav-link'>\n                KitcheNexus</Typography>\n            </Link>\n            {this.props.user.id ?\n              <LogOutButton className=\"nav-link\" /> :\n\n              <IconButton>\n                <Link className=\"nav-link\" to=\"/about\">\n                  <Info />\n                </Link>\n              </IconButton>\n            }\n          </Toolbar>\n        </AppBar>\n\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n//withRouter must wrap connect component thats created \n//otherwise history changes not detected on props and nav does not rerender\nexport default withRouter(connect(mapStateToProps)(Nav));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Grid, Button, TextField } from '@material-ui/core';\n\nclass LoginForm extends Component {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    submitUser = (event) => {\n        event.preventDefault();\n        if (this.props.mode === 'LOGIN') {\n            if (this.state.username && this.state.password) {\n                this.props.dispatch({\n                    type: this.props.mode,\n                    payload: {\n                        username: this.state.username,\n                        password: this.state.password,\n                    },\n                });\n            } else {\n                this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n            }\n        }\n        else if (this.props.mode === 'REGISTER') {\n            this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n        }\n    }\n\n    handleRegister = () => {\n        if (this.props.mode === 'REGISTER' && this.state.username !== '' && this.state.password !== '') {\n            this.props.dispatch({\n                type: this.props.mode,\n                payload: {\n                    username: this.state.username,\n                    password: this.state.password,\n                }\n            })\n        } else {\n            this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' })\n            this.props.dispatch({ type: 'CLEAR_LOGIN_ERROR' })\n        }\n    }\n\n    handleLoginReturn = () => {\n        this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' })\n        this.props.dispatch({ type: 'CLEAR_LOGIN_ERROR' })\n        this.props.dispatch({ type: 'CLEAR_REGISTRATION_ERROR' })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n        });\n    }\n\n    render() {\n        let registerBtnStyle;\n        if(this.props.mode === 'REGISTER'){\n            registerBtnStyle = { backgroundColor: '#aedd94' };\n        }\n        \n        return (\n            <div>\n                <form className='login-form' onSubmit={this.submitUser}>\n                    <Grid container\n                        direction='column'\n                        justify='space-evenly'\n                        alignItems='center'\n                        spacing={16}>\n                        <Grid item>\n                            <Grid container\n                                direction='row'\n                                justify='space-evenly'\n                                spacing={8}>\n                                <Grid item>\n                                    <TextField\n                                        label=\"Username\"\n                                        value={this.state.username}\n                                        onChange={this.handleInputChangeFor('username')}\n                                        margin=\"dense\"\n                                        variant=\"filled\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <TextField\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        autoComplete=\"current-password\"\n                                        margin=\"dense\"\n                                        variant=\"filled\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChangeFor('password')}\n                                    />\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container\n                                direction='row'\n                                justify='space-evenly'\n                                spacing={8}>\n                                {this.props.mode === 'LOGIN' ?\n                                    <Grid item>\n                                        <Button\n                                            variant='contained'\n                                            type='submit'\n                                            style={{ backgroundColor: '#aedd94' }}>\n                                            Login</Button>\n                                    </Grid>\n                                    :\n                                    <Grid item>\n                                        <Button\n                                            variant='contained'\n                                            onClick={this.handleLoginReturn}>\n                                            Return to Login</Button>\n                                    </Grid>\n                                }\n\n\n                                <Grid item>\n                                    <Button variant='contained'\n                                        type='submit'\n                                        onClick={this.handleRegister}\n                                        style={registerBtnStyle}>\n                                        Register</Button>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            </div>\n\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return { mode: rs.loginMode }\n}\n\nexport default connect(mapRStoProps)(LoginForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LoginForm from './LoginForm';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nclass LoginPage extends Component {\n\n  render() {\n    let formName = 'Register';\n    if(this.props.loginMode === 'LOGIN'){\n      formName = 'Login';\n    }\n\n    return (\n      <Grid container\n        direction='column'\n        justify='flex-start'\n        alignItems='center'\n        style={{ minHeight: '300px' }}\n        spacing={16}>\n        <Grid item>\n          <Typography variant='h4' align='center'>\n          {formName}</Typography>\n          {(this.props.errors.loginMessage || this.props.errors.registrationMessage) && (\n            <Typography variant='h5' align='center'\n              className=\"alert\"\n              role=\"alert\">\n              {this.props.errors.loginMessage}\n              {this.props.errors.registrationMessage}</Typography>\n          )}\n        </Grid>\n\n        <Grid item>\n          <LoginForm />\n        </Grid>\n\n      </Grid>\n    );\n  }\n}\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({errors});\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  loginMode: state.loginMode\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'LOGIN' || loginMode === 'REGISTER') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } \n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\nimport { Typography, Grid } from '@material-ui/core';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <Grid container\n    direction='row'\n    justify='center'\n    spacing={8}\n    style={{ minHeight: '300px' }}>\n\n    <Grid item xs={12}>\n      <Typography variant='h4' align='center'>\n        About the App\n    </Typography>\n    </Grid>\n\n    <Grid item xs={10}>\n      <Typography align='center'>\n        KitcheNexus is a passion project of mine to remove the minor hassles that crop up when managing a home kitchen.  Use KitcheNexus\n        and you will never forget a grocery list at home again.  It also does some smart comparison between your pantry and grocery lists to,\n        so you will not accidentally buy another jar of peanut butter or jug of milk.  Lastly, it has access to a huge number of recipes provided by Edamam API\n        for your browsing and favoriting.  Finding and recalling new recipes for later is now quick and easy, so more time can be spent cooking.\n      </Typography>\n    </Grid>\n\n    <Grid item xs={10}>\n      <Typography align='center'>\n        I know you'll enjoy using KitcheNexus so start right away!\n        I want to continue to make this app better to serve you, \n        so please reach out to me with feedback about the website at dunahee@gmail.com\n      </Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Grid, Typography } from '@material-ui/core';\nimport { Menu, ExitToApp } from '@material-ui/icons';\n\nclass UserPage extends React.Component {\n\n  render() {\n\n    return (\n      <Grid container\n        direction='column'\n        spacing={24}\n        style={{ minHeight: '300px' }}>\n\n        <Grid item>\n          <Typography variant='h4' align='center' id=\"welcome\">\n            Welcome, {this.props.user.username}!</Typography>\n        </Grid>\n\n        <Grid item>\n          <Typography align='center' >Use the <Menu /> to explore the app.  You can log out any time using <ExitToApp /> in the upper right.</Typography>\n        </Grid>\n\n        <Grid item>\n          <Typography align='center' >Stay tuned for upcoming features, like the ability to join a household, and food 'age' alerts.</Typography>\n        </Grid>\n\n      </Grid>\n    )\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\n\nimport {Grid, Paper, Typography} from '@material-ui/core';\n\nimport '../Nav/Nav.css';\n\nclass RecipesNav extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    }\n\n    getStyle = (linkName) => {\n        const location = this.props.location.pathname;\n        \n        const style = { backgroundColor: '#ffe3ae' };\n        switch (linkName) {\n            case ('browse'):\n                if (location === '/recipes/browse') {\n                    style.backgroundColor = '#ffc957';\n                    style.fontWeight = 'bold';\n                } \n                return style;\n            case ('favorites'):\n                if (location === '/recipes/favorites') {\n                    style.backgroundColor = '#ffc957';\n                    style.fontWeight = 'bold';\n                }\n                return style;\n            case ('recent'):\n                if (location === '/recipes/recent') {\n                    style.backgroundColor = '#ffc957';\n                    style.fontWeight = 'bold';\n                }\n                return style;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const linkStyle = {\n            padding: '14px',\n            fontWeight: 'inherit',\n            fontSize: 'inherit',\n        }\n\n        return (\n            <Grid container\n                direction='row'\n                justify='space-evenly'\n                alignItems='center'\n                spacing={16}>\n\n                <Grid item>\n                    <Paper style={this.getStyle('browse')}>\n                        <Link to={`${this.props.match.url}/browse`}\n                            className='nav-link'>\n                            <Typography align='center' \n                            style={linkStyle}> \n                            Browse</Typography>\n                        </Link>\n                    </Paper>\n                </Grid>\n\n                <Grid item>\n                    <Paper style={this.getStyle('favorites')}>\n                    <Link to={`${this.props.match.url}/favorites`}\n                        className='nav-link'>\n                        <Typography align='center' \n                        style={linkStyle}>\n                        Favorites</Typography>\n                    </Link>\n                    </Paper>\n                </Grid>\n\n                <Grid item>\n                    <Paper style={this.getStyle('recent')}>\n                    <Link to={`${this.props.match.url}/recent`}\n                        className='nav-link'>\n                        <Typography align='center' \n                        style={linkStyle}>\n                        Recent</Typography>\n                    </Link>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        )\n    }\n}\n\nconst RecipesNavWithRouter = withRouter(RecipesNav);\n\nexport default RecipesNavWithRouter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    Card, CardHeader, CardContent, CardActions,\n    Collapse, IconButton, Typography, List, ListItem\n}\n    from '@material-ui/core';\n\nimport { Favorite, FavoriteBorder, ExpandMore, OpenInNew } from '@material-ui/icons';\n\nclass RecipeCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false,\n        }\n    }\n\n    checkFavoriteStatus = () => {\n        const FavoriteCheck = this.props.favorites.find(\n            (recipe) => { return recipe.uri === this.props.recipe.uri })\n        if (FavoriteCheck === undefined) {\n            return <FavoriteBorder />\n        } else {\n            return <Favorite style={{ color: 'rgb(255, 201, 87)' }} />\n        }\n    }\n\n    handleExpandClick = () => {\n        this.setState({ expanded: !this.state.expanded });\n    }\n\n    handleLink = () => {\n        this.props.dispatch({ type: 'ADD_RECENT_RECIPE', payload: this.props.recipe.uri })\n    }\n\n    handleFavorite = () => {\n        this.props.dispatch({ type: 'ADD_FAVORITE', payload: this.props.recipe.uri })\n    }\n\n    render() {\n        let imageLink = '/images/image_not_found_300x300.png';\n\n        return (\n            <Card style={{ maxWidth: '300px' }}>\n                <CardHeader\n                    title={this.props.recipe.label}\n                    subheader={`Cook Time ${this.props.recipe.totalTime > 0 ? `: ~${this.props.recipe.totalTime} min` : `Unlisted`}`} />\n                {/* replaces CardMedia because needed to source alternative img if edamam API unresponsive */}\n                <div style={{\n                    backgroundImage: `url(${this.props.recipe.image}), url(${imageLink})`,\n                    display: 'block',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center',\n                    height: '300px',\n                    width: '300px'\n                }}>\n                </div>\n                <CardActions>\n                    <IconButton\n                        onClick={this.handleFavorite}\n                        aria-label=\"Add to favorites\">\n                        {this.checkFavoriteStatus()}\n                    </IconButton>\n                    <a href={this.props.recipe.url}\n                        target='_blank'\n                        rel=\"noopener noreferrer\"\n                        onClick={this.handleLink}>\n                        <IconButton\n                            aria-label=\"Link to Directions\">\n                            <Typography>\n                                Directions\n                        </Typography>\n                            <OpenInNew />\n                        </IconButton>\n                    </a>\n\n                    <IconButton\n                        onClick={this.handleExpandClick}\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"Show Ingredients\"\n                    >\n                        <Typography>\n                            Ingredients\n                        </Typography>\n                        <ExpandMore\n                            style={this.state.expanded ? { transform: 'rotate(180deg)' } : {}} />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <List>\n                            {this.props.recipe.ingredientLines.map((ingredient, i) => {\n                                return <ListItem key={i}>{ingredient}</ListItem>\n                            })}\n                        </List>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return { favorites: rs.food.recipeFavorites }\n}\n\nexport default connect(mapRStoProps)(RecipeCard)\n","import React, { Component } from 'react';\nimport RecipeCard from './RecipeCard';\n\nimport { Grid } from '@material-ui/core'\n\n\nclass RecipeCardList extends Component {\n    render() {\n        return (\n            <Grid container\n                direction='row'\n                spacing={16}\n                justify=\"center\"\n                alignItems=\"baseline\">\n\n                {this.props.recipes.map((recipe, i) => {\n                    return (\n                        <Grid item key={i}>\n                            <RecipeCard recipe={recipe} key={i} />\n                        </Grid>\n                    )\n                })}\n\n            </Grid>\n        )\n    }\n}\n\nexport default RecipeCardList;","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { connect } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport './FoodSearchBar.css';\n\n\n\n// tells autosuggest how to read suggestions for user from redux store\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n    <span>\n        {suggestion.name}\n    </span>\n);\n\n// collections of redux actions that could be broken out and reused elsewhere\nconst setValue = (value) => ({ type: 'SET_VALUE', payload: value });\nconst clearSuggestions = () => ({ type: 'CLEAR_SUGGESTIONS' });\nconst fetchFoods = value => ({ type: 'FETCH_FOODS', payload: value });\nconst setRecipeSearchValue = (value) => ({ type: 'RECIPE_SEARCH_VALUE', payload: value });\n\nclass FoodSearchBar extends Component {\n    constructor(props) {\n        super(props);\n        // Autosuggest is a controlled component that requires an input value\n        // and an onChange handler that updates this value (see below).\n        this.state = {\n            value: '',\n            pageView: this.props.pageView,\n        };\n    }\n\n    onChange = (event, { newValue }) => {\n        const { setValue, setRecipeSearchValue } = this.props;\n        if (this.state.pageView === 'GROCERY' || this.state.pageView === 'PANTRY') {\n            setValue(newValue);\n        } else {\n            setRecipeSearchValue(newValue);\n        }\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.props.clearSuggestions();\n    };\n    // Teach Autosuggest how to calculate suggestions for any given input value.\n    getSuggestions = value => {\n        //removes white space and capitals\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        if (inputLength > 1) {\n            this.props.fetchFoods(inputValue);\n        }\n    }\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.getSuggestions(value)\n    };\n\n    render() {\n        // console.log(this.props);\n        // console.log(this.state);\n        let value;\n        //logic to determine what store value is connected to based on pantryView\n        this.state.pageView === 'RECIPE' ?\n            value = this.props.recipeSearchValue :\n            value = this.props.foodSearchValue;\n        // Suggestions also need to be provided to the Autosuggest,\n        // and they are initially empty because the Autosuggest is closed.\n        const suggestions = this.props.suggestions.map(food => {\n            return { name: food }\n        });\n        // Autosuggest will pass through all these props to the input.\n        const inputProps = {\n            placeholder: `eg 'ap'`,\n            value,\n            onChange: this.onChange\n        };\n\n\n        // Finally, render it!\n        console.log(this);\n        return (\n            <div>\n                <Typography>Type 2 letters and food will appear!</Typography>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                    id='foods-search-bar'\n                />\n            </div>\n\n        );\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return ({\n        suggestions: rs.food.searchResults,\n        foodSearchValue: rs.food.foodSearchValue,\n        recipeSearchValue: rs.food.recipeSearchValue,\n    })\n}\n\nconst mapDispatchToProps = {\n    setValue: value => setValue(value),\n    clearSuggestions: () => clearSuggestions(),\n    fetchFoods: value => fetchFoods(value),\n    setRecipeSearchValue: value => setRecipeSearchValue(value),\n}\n\nexport default connect(mapRStoProps, mapDispatchToProps)(FoodSearchBar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport RecipeCardList from './RecipeCardList';\nimport FoodSearchBar from '../FoodSearchBar/FoodSearchBar';\n\nimport { Grid, IconButton } from '@material-ui/core';\nimport { Search, Clear, Delete, Cake } from '@material-ui/icons';\n\nclass RecipeBrowse extends Component {\n\n    handleSubmit = () => {\n        this.props.dispatch({ type: 'FETCH_RECIPES', payload: this.props.recipeSearchValue })\n    }\n\n    handleClear = () => {\n        this.props.dispatch({ type: 'CLEAR_SEARCH_VALUE' });\n    }\n\n    handleClearAll = () => {\n        this.props.dispatch({ type: \"CLEAR_RECIPE_HITS\" });\n        this.props.dispatch({ type: 'CLEAR_SEARCH_VALUE' });\n    }\n\n    render() {\n        return (\n            <Grid container\n                direction='column'\n                justify=\"flex-start\"\n                alignItems=\"center\"\n                spacing={16}>\n\n                <Grid item>\n                    <Grid container\n                        direction='row'\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={8}>\n\n                        <Grid item>\n                            <FoodSearchBar pageView='RECIPE' />\n                        </Grid>\n\n                        <Grid item>\n                            <IconButton onClick={this.handleSubmit}\n                                style={{ backgroundColor: '#ffe3ae' }}>\n                                <Search /> </IconButton>\n                        </Grid>\n\n                        <Grid item>\n                            <IconButton onClick={this.handleClear}\n                                style={{ backgroundColor: '#ffe3ae' }}>\n                                <Clear /> </IconButton>\n                        </Grid>\n\n                        <Grid item>\n                            {this.props.recipeHits.length > 0 ?\n                                <IconButton onClick={this.handleClearAll}\n                                    color='secondary'\n                                    style={{ backgroundColor: '#ffc957' }}>\n                                    <Delete /> </IconButton> :\n                                <IconButton style={{ visibility: 'hidden' }}>\n                                    <Cake />\n                                </IconButton>}\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n\n                <Grid item>\n                    {this.props.recipeHits.length > 0 &&\n                        <RecipeCardList recipes={this.props.recipeHits}/>}\n                </Grid>\n\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        recipeSearchValue: rs.food.recipeSearchValue,\n        recipeHits: rs.food.recipeHits,\n    }\n}\n\nexport default connect(mapRStoProps)(RecipeBrowse);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport RecipeCardList from './RecipeCardList';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nclass RecipeRecent extends Component {\n    componentDidMount(){\n        this.props.dispatch({ type: 'FETCH_RECENT_RECIPES' });\n    }\n    render() {\n        return (\n            <Grid container\n                direction='column'\n                justify=\"flex-start\"\n                alignItems=\"center\"\n                spacing={16}>\n                <Grid item>\n                    <Typography align='center'>Recent recipes are up to the last 5 recipes you have viewed in the past week!  Use this tab to favorite recipes you have tried and liked!</Typography>\n                </Grid>\n                <Grid item>\n                    {this.props.recentRecipes.length > 0 &&\n                        <RecipeCardList recipes={this.props.recentRecipes} />}\n                </Grid>\n\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return { recentRecipes: rs.food.recentRecipes }\n}\n\nexport default connect(mapRStoProps)(RecipeRecent);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport RecipeCardList from './RecipeCardList';\n\nimport { FavoriteBorder } from '@material-ui/icons';\nimport { Grid, Typography } from '@material-ui/core';\n\n\n\nclass RecipeFavorites extends Component {\n  componentDidMount(){\n    this.props.dispatch({ type: 'FETCH_FAVORITES' });\n  }\n  render() {\n    return (\n      <Grid container\n        direction='column'\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        spacing={16}>\n\n        <Grid item>\n          {this.props.favorites.length > 0 ?\n            <Typography> You have\n              {this.props.favorites.length === 1 ? ' one recipe ' :\n                ` ${this.props.favorites.length} recipes `}\n              favorited so far.  Keep building your collection!\n            </Typography>\n            :\n            <Typography>\n              You have no favorites at this time.\n              Click <FavoriteBorder /> Icon on recipes\n              you want to easily access later!\n            </Typography>}\n        </Grid>\n\n        <Grid item>\n          {this.props.favorites.length > 0 &&\n            <RecipeCardList recipes={this.props.favorites} />}\n        </Grid>\n\n      </Grid>\n    )\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return { favorites: rs.food.recipeFavorites }\n}\n\nexport default connect(mapRStoProps)(RecipeFavorites)","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport RecipesNav from './RecipesNav';\nimport RecipeBrowse from './RecipeBrowse';\nimport RecipeRecent from './RecipeRecent';\nimport RecipeFavorites from './RecipeFavorites';\n\nimport {Grid, Typography, Paper} from '@material-ui/core';\n\nclass Recipes extends Component {\n\n  render() {\n    // console.log(this.props);\n\n    return (\n      <Grid container\n        direction='column'\n        spacing={24}\n        style={{ minHeight: '450px' }}>\n        <Grid item>\n          <Paper style={{ backgroundColor: '#ffc957', minHeight: '56px' }}>\n            <Typography variant='h4' align='center' style={{padding: '8px'}}>Recipes</Typography>\n          </Paper>\n        </Grid>\n\n        <Grid item>\n          <RecipesNav />\n        </Grid>\n\n        <Grid item>\n          <Route exact path='/recipes/browse'\n            component={RecipeBrowse}\n          />\n          <Route exact path='/recipes/recent'\n            component={RecipeRecent}\n          />\n          <Route exact path='/recipes/favorites'\n            component={RecipeFavorites} />\n        </Grid>\n\n      </Grid>\n    )\n  }\n}\n\nexport default connect()(Recipes)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nimport ListItem from '@material-ui/core/ListItem';\n\nclass FoodToAddListItem extends Component {\n    //warns user if item duplicated elsewhere\n    checkForDuplicates = () => {\n        const warning = ['( food is already'];\n        switch (this.props.pageView) {\n            case ('PANTRY'):\n                if (this.props.pantry.filter(pantryItem => pantryItem.food_name === this.props.item).length > 0) {\n                    warning.push('in your pantry )');\n                    return warning.join(' ');\n                } else { return '' }\n            case ('GROCERY'):\n                warning.push('on list:');\n                //check to see if food is already on a give list and update warning\n                this.props.grocery.forEach((groceryObj) => {\n                    this.props.listNames.forEach((listObj) => {\n                        const listCheck = groceryObj.list_name === listObj.list_name\n                        const foodCheck = groceryObj.name === this.props.item\n                        if (listCheck && foodCheck) {\n                            warning.push(`\"${listObj.list_name}\"`);\n                        }\n                    })\n                })\n                //checks to see if item on any lists\n                if (warning.length > 2) {\n                    warning.push(')');\n                    return warning.join(' ')\n                } else {\n                    return ''\n                }\n            default:\n                return '';\n        }\n    }\n\n    handleListItemClick = () => {\n        switch (this.props.pageView) {\n            case ('PANTRY'):\n                return this.props.dispatch({ type: 'REMOVE_PENDING_PANTRY_ITEM', payload: this.props.index })\n            case ('GROCERY'):\n                return this.props.dispatch({ type: 'REMOVE_PENDING_GROCERY_ITEM', payload: this.props.index })\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <ListItem\n                onClick={this.handleListItemClick}>\n                {this.props.item} {this.checkForDuplicates()}\n            </ListItem>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pendingGroceryItems: rs.grocery.pendingGroceryItems,\n        pendingPantryItems: rs.pantry.pendingPantryItems,\n        pantry: rs.pantry.pantry,\n        grocery: rs.grocery.grocery,\n        listNames: rs.grocery.groceryListNames,\n    }\n}\n\nexport default connect(mapRStoProps)(FoodToAddListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FoodToAddListItem from './FoodToAddListItem';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass FoodToAddList extends Component {\n\n    buildList = () => {\n        let pendingArr;\n        if (this.props.pageView === 'GROCERY') {\n            pendingArr = this.props.pendingGroceryItems;\n        } else if (this.props.pageView === 'PANTRY'){\n            pendingArr = this.props.pendingPantryItems;\n        }\n        return pendingArr.map((item, i) => {\n            return <FoodToAddListItem item={item} key={i} index={i} pageView={this.props.pageView}/>\n        })\n    }\n\n    render() {\n        return (\n            <Grid container\n                direction='column'\n                alignItems='flex-start'>\n                <Grid item>\n                    <DialogContentText>Food to Add: Tap to Remove</DialogContentText>\n                </Grid>\n                <Grid item>\n                    <List>\n                        {this.props.pendingGroceryItems.length > 0 &&\n                            this.buildList()}\n                        {this.props.pendingPantryItems.length > 0 &&\n                            this.buildList()}\n                    </List>\n                </Grid>\n\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pendingGroceryItems: rs.grocery.pendingGroceryItems,\n        pendingPantryItems: rs.pantry.pendingPantryItems,\n    }\n}\n\nexport default connect(mapRStoProps)(FoodToAddList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FoodSearchBar from './FoodSearchBar';\nimport FoodToAddList from './FoodToAddList';\n\nimport {Button, Dialog, DialogActions, DialogTitle, Slide, AppBar, Toolbar, IconButton, Typography, Grid, Fab } from '@material-ui/core';\nimport {Close as CloseIcon, Add as AddIcon, Fastfood as FoodIcon} from '@material-ui/icons';\n\nimport './FoodSearchBar.css';\n\nclass FoodFormPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let action = {};\n        if (this.props.pageView === 'GROCERY') {\n            action = {\n                type: `ADD_FOOD_TO_GROCERY`,\n                payload: {\n                    groceries: this.props.pendingGroceryItems,\n                    listName: this.props.listName\n                }\n            }\n        } else if (this.props.pageView === 'PANTRY') {\n            action = {\n                type: `ADD_FOOD_TO_PANTRY`,\n                payload: this.props.pendingPantryItems\n            }\n        }\n\n        this.props.dispatch(action);\n        this.handleClose();\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    //dispatches food item to pendingPantry reducer for storage until all items added\n    handleAdd = () => {\n        this.props.dispatch({ type: `ADD_TO_PENDING_${this.props.pageView}`, payload: this.props.foodSearchValue })\n        this.props.dispatch({ type: 'CLEAR_VALUE' });\n    }\n\n    handleClear = () => {\n        this.props.dispatch({ type: `CLEAR_PENDING_${this.props.pageView}` });\n    }\n\n    transition = (props) => {\n        return <Slide direction=\"up\" {...props} />;\n    }\n\n    getClass = () => {\n        switch (this.props.pageView) {\n            case ('PANTRY'):\n                return 'food-popup-bar-pantry';\n            case ('GROCERY'):\n                return 'food-popup-bar-grocery';\n            default:\n                return '';\n        }\n    }\n\n    checkForDuplicates = (pageView, item) => {\n        switch (pageView) {\n            case ('PANTRY'):\n                if (this.props.pantry.filter(pantryItem => pantryItem.food_name === item).length > 0) {\n                    return 'already in pantry';\n                } else { return '' }\n            case ('GROCERY'):\n                if (this.props.grocery.filter(groceryItem => groceryItem.name === item).length > 0) {\n                    return 'already on a list';\n                } else { return '' }\n            default:\n                return '';\n        }\n    }\n\n    render() {\n\n        return (\n            <Grid container\n                justify='center'>\n                <Fab aria-label=\"Add Food\"\n                    onClick={this.handleOpen} \n                    size='medium'>\n                    <AddIcon fontSize='small'/>\n                    <FoodIcon fontSize='small'/>\n                </Fab>\n                <Dialog open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    TransitionComponent={this.transition}\n                    fullScreen>\n                    <AppBar position='relative' className={this.getClass()}>\n                        <Toolbar >\n                            <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\" >\n                                {this.props.pageView === 'GROCERY' ? 'Adding Food to Grocery List' : `Adding Food to Pantry`}\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container\n                        alignItems='center'\n                        direction='column'\n                        spacing={24}>\n\n                        <Grid item>\n                            <Grid container\n                                spacing={8}\n                                direction='column'\n                                justify=\"space-evenly\"\n                                alignItems=\"center\">\n\n                                <form onSubmit={this.handleSubmit}>\n                                    <Grid item>\n                                        <DialogTitle>\n                                            {this.props.listName !== undefined ? `${this.props.listName}` : `What's already in your pantry?`}\n                                        </DialogTitle>\n                                    </Grid>\n                                    <Grid item>\n                                        <FoodSearchBar pageView={this.props.pageView} />\n                                    </Grid>\n                                    <Grid item>\n                                        <DialogActions>\n                                            <Button onClick={this.handleAdd} color='primary' variant=\"outlined\">\n                                                Add</Button>\n                                            <Button onClick={this.handleClear} color='secondary' variant=\"outlined\">\n                                                Clear All</Button>\n                                            <Button type='submit' variant=\"outlined\">\n                                                {this.props.pageView === 'GROCERY' && 'Finalize List'}\n                                                {this.props.pageView === 'PANTRY' && 'Update Pantry'}\n                                            </Button>\n                                        </DialogActions>\n                                    </Grid>\n                                </form>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item>\n                            <FoodToAddList pageView={this.props.pageView} />\n                        </Grid>\n\n\n                    </Grid>\n                </Dialog>\n            </Grid>\n\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pendingGroceryItems: rs.grocery.pendingGroceryItems,\n        pendingPantryItems: rs.pantry.pendingPantryItems,\n        foodSearchValue: rs.food.foodSearchValue,\n    }\n}\n\nexport default connect(mapRStoProps)(FoodFormPopup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Grid from '@material-ui/core/Grid';\n\nclass PantryTagSelect extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            value:  this.props.foodObj.tag_name === null ? \n                '' : \n                this.props.foodObj.tag_id,\n        }\n    }\n\n    handleTagChange = (event) => {\n        // this.props.dispatch({''})\n        console.log('in handleTagChange');\n        this.setState({value: event.target.value});\n        const newTagFoodObj = this.props.foodObj;\n        newTagFoodObj.tag_id = event.target.value;\n        this.props.dispatch(\n            {\n                type: 'ADD_TO_BATCH', \n                payload: newTagFoodObj,\n            })\n    }\n\n    buildOptions = () => {\n        return this.props.tags.map((tag, i) => {\n            return (\n                <option value={tag.id}\n                    key={i}>\n                {tag.name}\n                </option>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Grid item>\n                <select value={this.state.value}\n                    onChange={this.handleTagChange}>\n                    <option value='' disabled>\n                    Choose One\n                    </option>\n                    {this.props.tags && this.buildOptions()}\n                </select>\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {tags: rs.pantry.pantryTags}\n}\n\nexport default connect(mapRStoProps)(PantryTagSelect)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport PantryTagSelect from './PantryTagSelect';\n\n\nclass PantryRowItem extends Component {\n\n    handleClick = async () => {\n        let confirmGone = window.confirm('Have you run out of this item?');\n        if (confirmGone) {\n\n            let confirmMore = await window.confirm('Do you want to order more?');\n            this.props.dispatch({ type: 'REMOVE_FROM_PANTRY', payload: [this.props.foodObj] });\n            if (confirmMore) {\n                this.props.dispatch({ type: 'ADD_FOOD_TO_GROCERY', payload: { groceries: [this.props.foodObj.food_name] } });\n            }\n        } else {\n            alert('Removal canceled.');\n        }\n\n    }\n\n    handleCheckbox = (event) => {\n        // console.log(this.props.foodObj);\n        this.setState({checked: event.target.checked})\n        if (event.target.checked) {\n            this.props.dispatch({ type: 'ADD_TO_BATCH', payload: this.props.foodObj });\n        } else {\n            this.props.dispatch({ type: 'REMOVE_FROM_BATCH', payload: this.props.foodObj });\n        }\n    }\n\n    render() {\n        return (\n            <TableRow onClick={this.props.batchAction === '' ? this.handleClick : null}>\n                <TableCell>\n                    {this.props.foodObj.food_name}\n                </TableCell>\n                <TableCell>\n                    {this.props.batchAction === 'Update Tags' ?\n                        <PantryTagSelect\n                            foodObj={this.props.foodObj}\n                        /> :\n                        this.props.foodObj.pantry_tag_name}\n                </TableCell>\n                <TableCell>\n                    {moment(this.props.foodObj.date_added).fromNow(true)}\n                </TableCell>\n                <TableCell>\n                    {this.props.batchAction && this.props.batchAction !== 'Update Tags' &&\n                        <input type='checkbox'\n                            onChange={this.handleCheckbox}\n                            checked={this.props.batchItems.includes(this.props.foodObj)}\n                        />}\n                </TableCell>\n            </TableRow>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        batchItems: rs.pantry.batchItems,\n        batchAction: rs.pantry.batchAction,\n    }\n}\n\nexport default connect(mapRStoProps)(PantryRowItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PantryRowItem from './PantryRowItem';\n\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport './Pantry.css';\n\nclass PantryTable extends Component {\n    buildPantryTableRows = () => {\n        return this.props.pantry.map((foodObj, i) => {\n            return <PantryRowItem key={i} foodObj={foodObj} />\n        })\n    }\n\n    render() {\n        return (\n            <Grid container\n                direction='row'\n                justify='center'>\n                <Grid item>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className='table-header-cell'>\n                                    Food\n                            </TableCell>\n                                <TableCell className='table-header-cell'>\n                                    Tag\n                            </TableCell>\n                                <TableCell className='table-header-cell'>\n                                    \"Age\"\n                            </TableCell>\n                                <TableCell className='table-header-cell'>{this.props.batchAction && this.props.batchAction !== 'Update Tags' && 'Select'}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.buildPantryTableRows()}\n                        </TableBody>\n                    </Table>\n                </Grid>\n\n\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pantry: rs.pantry.pantry,\n        batchAction: rs.pantry.batchAction,\n    }\n}\n\nexport default connect(mapRStoProps)(PantryTable);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux';\n\nimport Grid from '@material-ui/core/Grid';\n\nclass BatchActions extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    }\n\n    handleActionChange = (event) => {\n        this.props.dispatch({ type: 'CLEAR_BATCH_ITEMS' });\n        this.props.dispatch({ type: 'SET_ACTION', payload: event.target.value });\n    }\n\n    checkColor = () => {\n        if (this.props.batchAction === ''){\n            return '#ffb4b0'\n        } else {\n            return '#ff5d55'\n        }\n    }\n\n    render() {\n\n\n        return (\n            <Grid container>\n                <select value={this.props.batchAction}\n                    onChange={this.handleActionChange}\n                    style={{\n                        height: '100%',\n                        textAlignLast: 'center',\n                        fontSize: '1rem',\n                        backgroundColor: this.checkColor(),\n                    }}\n                        autowidth='true'>\n                        <option value=''>\n                    Update Existing Pantry?</option>\n                <option value='Buy More'>\n                    Buy More</option>\n                <option value='Used Up'>\n                    Used Up</option>\n                <option value='Find Recipes'>\n                    Find Recipes</option>\n                <option value='Update Tags'>\n                    Update Tags</option>\n                    </select>\n                </Grid >\n        )\n    }\n}\n\nconst BatchActionsWithRouter = withRouter(BatchActions);\n\nconst mapRStoProps = (rs) => {\n    return {\n        pantry: rs.pantry.pantry,\n        batchItems: rs.pantry.batchItems,\n        batchAction: rs.pantry.batchAction,\n    }\n}\n\nexport default connect(mapRStoProps)(BatchActionsWithRouter);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport {Grid, IconButton} from '@material-ui/core/';\n\nimport {AddShoppingCart, Delete, Search, Create, Cake} from '@material-ui/icons';\n\nclass BatchActionButton extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    }\n\n    handleActionButton = () => {\n        if (this.props.batchItems.length === 0) {\n            return alert('You must select at least one item in the table below first.');\n        } else {\n            switch (this.props.batchAction) {\n                case ('Buy More'):\n                    return this.props.dispatch({\n                        type: 'ADD_FOOD_TO_GROCERY',\n                        payload: {\n                            groceries: this.props.batchItems.map(food => {\n                                return food.food_name;\n                            })\n                        }\n                    })\n                case ('Used Up'):\n                    return this.props.dispatch({\n                        type: 'REMOVE_FROM_PANTRY',\n                        payload: this.props.batchItems,\n                    })\n                case ('Find Recipes'):\n                    const searchCriteria = this.props.batchItems.map(food => {\n                            return food.food_name\n                        }).join(' ')\n                    this.props.dispatch({\n                        type: 'FETCH_RECIPES',\n                        payload: searchCriteria})\n                    this.props.dispatch({\n                        type: 'RECIPE_SEARCH_VALUE', \n                        payload: searchCriteria})\n                    return this.props.history.push('/recipes/browse');\n                case ('Update Tags'):\n                    return this.props.dispatch({\n                        type: 'UPDATE_TAGS',\n                        payload: this.props.batchItems,\n                    })\n                default:\n                    return null;\n            }\n        }\n\n    }\n\n    render() {\n        let actionButtonDescription;\n        switch (this.props.batchAction) {\n            case ('Buy More'):\n                actionButtonDescription = <AddShoppingCart />;\n                break;\n            case ('Used Up'):\n                actionButtonDescription = <Delete/> ;\n                break;\n            case ('Find Recipes'):\n                actionButtonDescription = <Search />;\n                break;\n            case ('Update Tags'):\n                actionButtonDescription = <Create />;\n                break;\n            default:\n                actionButtonDescription = '';\n        }\n\n        return (\n            <Grid container\n                justify='center'>\n                {this.props.batchAction === '' ? \n                    <IconButton style={{visibility: 'hidden'}}>\n                        <Cake />\n                    </IconButton> :\n                    <IconButton onClick={this.handleActionButton}\n                        variant=\"outlined\"\n                        style={{ backgroundColor: '#ff5d55'}}>\n                        {actionButtonDescription}</IconButton>}\n            </Grid>\n        )\n    }\n}\n\nconst BatchActionButtonWithRouter = withRouter(BatchActionButton);\n\nconst mapRStoProps = (rs) => {\n    return {\n        pantry: rs.pantry.pantry,\n        batchItems: rs.pantry.batchItems,\n        batchAction: rs.pantry.batchAction,\n    }\n}\n\nexport default connect(mapRStoProps)(BatchActionButtonWithRouter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FoodFormPopup from '../FoodSearchBar/FoodFormPopup';\nimport PantryTable from './PantryTable';\nimport BatchActions from './BatchActions';\nimport BatchActionButton from './BatchActionButton';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nclass Pantry extends Component {\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.dispatch({ type: 'ADD_FOOD_TO_PANTRY', payload: this.props.pendingPantryItems })\n  }\n\n  render() {\n    return (\n      <Grid container\n        direction='column'\n        alignItems=\"stretch\"\n        spacing={24}\n        style={{ minHeight: '450px' }}>\n\n        <Grid item>\n          <Paper style={{ backgroundColor: '#ff5d55', minHeight: '56px' }}>\n            <Grid container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={8}>\n              <Grid item\n                xs={3}>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant='h4' align='center'>Pantry</Typography>\n              </Grid>\n              <Grid item xs={3}>\n                <FoodFormPopup pageView='PANTRY' />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {this.props.pantry.length === 0 ?\n          <Grid item>\n            <Typography align='center'>You have no items in your pantry yet! Begin adding them by using </Typography>\n            <FoodFormPopup pageView='PANTRY' />\n          </Grid>\n          :\n          <Grid item>\n            <Grid container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\">\n\n              <Grid item\n                xs={3}>\n                <BatchActions />\n              </Grid>\n\n              <Grid item\n                xs={3}>\n                <BatchActionButton />\n              </Grid>\n\n            </Grid>\n          </Grid>\n        }\n        {this.props.pantry.length > 0 &&\n          <Grid item>\n            <PantryTable />\n          </Grid>\n        }\n\n\n      </Grid >\n    )\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return {\n    pendingPantryItems: rs.pantry.pendingPantryItems,\n    pantry: rs.pantry.pantry\n  }\n}\n\nexport default connect(mapRStoProps)(Pantry);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport {ListItem} from '@material-ui/core';\n\nclass GroceryListItem extends Component {\n\n  handleClick = () => {\n    const remove = window.confirm('Remove from list?');\n    if (remove) {\n      const purchased = window.confirm('Add to pantry?');\n      if (purchased) {\n        this.props.dispatch({\n          type: 'ADD_FOOD_TO_PANTRY',\n          payload: [this.props.groceryItem.name],\n        })\n      }\n      this.props.dispatch({\n        type: 'DELETE_GROCERY_ITEM',\n        payload: this.props.groceryItem,\n      })\n    } else {\n      alert('Item kept on list.');\n    }\n  }\n\n  render() {\n    return (\n      <ListItem onClick={this.handleClick}>\n        {this.props.groceryItem.name}\n      </ListItem>\n    )\n  }\n}\n\nexport default connect()(GroceryListItem)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GroceryListItem from '../Grocery/GroceryListItem';\nimport FoodFormPopup from '../FoodSearchBar/FoodFormPopup';\n\nimport {\n    Grid, Typography, IconButton, List, ListItem,\n    ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary,\n} from '@material-ui/core'\n\nimport { ExpandMore, DeleteForever } from '@material-ui/icons';\n\n\nclass GroceryLists extends Component {\n\n    //build individual list items\n    buildListItem = () => {\n        //creates array of just relevant list items\n        const listItems = this.props.grocery.filter(\n            (groceryItem, index) => { return groceryItem.list_name === this.props.list.list_name });\n        //if array is not empty, generates list otherwise returns placeholder text\n        if(listItems.length > 0){\n            return listItems.map((groceryItem, index) => {\n                return <GroceryListItem\n                    groceryItem={groceryItem}\n                    key={index} />\n            })\n        } else {\n            return <ListItem>You have no grocery lists or groceries at this time.</ListItem>\n        }   \n    }\n\n    handleDeleteList = () => {\n        let confirmation = window.confirm('This will delete the list and all of its contents. Do you want to continue?')\n        if (confirmation) {\n            this.props.dispatch({ type: 'DELETE_LIST', payload: this.props.list.id })\n        } else {\n            alert('Delete canceled.')\n        }\n    }\n\n\n    render() {\n        return (\n            <Grid item\n                xs={8}>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMore />} style={{ backgroundColor: '#a8c6fa' }}>\n                        <Grid container\n                            direction='row'\n                            justify='space-between'\n                            alignItems='center'>\n\n                            <Grid item>\n                                <FoodFormPopup listName={this.props.list.list_name} pageView='GROCERY' />\n                            </Grid>\n\n                            <Grid item>\n                                <Typography align='center' style={{fontSize: '1rem'}}>\n                                    {this.props.list.list_name}</Typography>\n                            </Grid>\n\n                            <Grid item>\n                                <IconButton onClick={this.handleDeleteList} style={{ backgroundColor: '#e0e0e0', color: 'black'}}> <DeleteForever /> </IconButton>\n                            </Grid>\n\n                        </Grid>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <List>\n                            {this.buildListItem()}\n                        </List>\n                    </ExpansionPanelDetails>\n\n                </ExpansionPanel>\n            </Grid>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return { grocery: rs.grocery.grocery }\n}\n\nexport default connect(mapRStoProps)(GroceryLists);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button, TextField, Dialog, DialogActions, \n    DialogContent, DialogContentText, DialogTitle, \n    IconButton, Grid} from '@material-ui/core/';\n\nimport {PlaylistAdd} from '@material-ui/icons';\n\nclass CreateListPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            listName: null,\n        }\n    }\n\n    handleCreateNewList = () => {\n        this.props.dispatch({type: 'CREATE_NEW_GROCERY_LIST', payload: this.state.listName})\n        this.handleClose();\n        this.setState({listName: null})\n    }\n\n    updateName = (event) => {\n        this.setState({listName: event.target.value})\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n  render() {\n    return (\n      <Grid container\n        justify='center'>\n            <IconButton onClick={this.handleOpen} style={{ backgroundColor: '#e0e0e0'}}> \n            <PlaylistAdd /> </IconButton>\n            <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Creating New Grocery List</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        What's your list's name?\n          </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"eg 'Target' or 'Party Supplies'\"\n                        type=\"email\"\n                        fullWidth\n                        value={this.state.listName === null ? '' : this.state.listName}\n                        onChange={this.updateName}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"default\" variant='contained'>\n                        Cancel\n          </Button>\n                    <Button onClick={this.handleCreateNewList} style={{ backgroundColor: '#a8c6fa'}} variant='contained'>\n                        Create\n          </Button>\n                </DialogActions>\n            </Dialog>\n      </Grid>\n    )\n  }\n}\n\nexport default connect()(CreateListPopup)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GroceryLists from './GroceryLists';\nimport CreateListPopup from './CreateListPopup';\n\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nclass Grocery extends Component {\n\n  buildGroceryLists = () => {\n    return this.props.listNames.map((list, i) => {\n      return <GroceryLists list={list} key={i} />\n    })\n  }\n\n  render() {\n    return (\n      <Grid container\n        direction='column'\n        justify=\"flex-start\"\n        alignItems=\"stretch\"\n        spacing={16}\n        style={{ minHeight: '450px' }}>\n\n        <Grid item>\n          <Paper style={{ backgroundColor: '#3d8af7', minHeight: '56px' }}>\n            <Grid container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={8}>\n              <Grid item\n                xs={3}>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant='h4' align='center'>Grocery</Typography>\n              </Grid>\n              <Grid item xs={3}>\n                <CreateListPopup />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n\n        {this.props.listNames.length > 0 ?\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={8}>\n              {this.buildGroceryLists()}\n            </Grid>\n          </Grid>\n          :\n          <Grid item>\n            <Typography align='center'>You have no grocery lists yet! Create one using  </Typography>\n            <CreateListPopup />\n          </Grid>}\n\n      </Grid>\n    )\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return { listNames: rs.grocery.groceryListNames }\n}\n\nexport default connect(mapRStoProps)(Grocery);\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport Recipes from '../Recipe/Recipes';\nimport Pantry from '../Pantry/Pantry';\nimport Grocery from '../Grocery/Grocery';\n\nimport { Grid, Paper } from '@material-ui/core';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Grid container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"stretch\">\n          <Grid item\n            xs={12}\n            sm={10}\n            md={8}\n            lg={6}>\n            <Grid container\n              direction='column'\n              justify='space-between'\n              alignItems='stretch'\n              spacing={16}\n            >\n              <Grid item>\n                <Nav location={this.props.location} />\n              </Grid>\n\n              <Grid item>\n                <Paper>\n                  <Switch>\n\n                    <Redirect exact from=\"/\" to=\"/home\" />\n\n                    <Route\n                      exact\n                      path=\"/about\"\n                      component={AboutPage} />\n\n                    <ProtectedRoute\n                      exact\n                      path=\"/home\"\n                      component={UserPage} />\n\n                    <ProtectedRoute\n                      path=\"/pantry\"\n                      component={Pantry} />\n\n                    <ProtectedRoute\n                      path=\"/recipes\"\n                      component={Recipes} />\n\n                    <ProtectedRoute\n                      path=\"/grocery\"\n                      component={Grocery} />\n\n                    <Route render={() => <h1>404</h1>} />\n                  </Switch>\n                </Paper>\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n      </Router >\n    )\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}